# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: start
        run: 
          echo build page start, ready to setup Node
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
          always-auth: true
      - name: Clone DarkLight
        run: |
          cd ..
          rm -rf ./DarkLight
          git clone https://github.com/DarkLight-Long/DarkLight.git
          pwd
          ls
      - name: Clone blog-demo
        run: |
          cd ..
          pwd
          ls
          git clone https://github.com/DarkLight-Long/blog-demo.git
          pwd
          ls
      - name: Install Dependencies
        run: |
          pwd
          ls
          npm install
          npm run build --if-present
          ls
      - name: MV dist to blog-demo, and push blog-demo
        run: |
          /bin/cp -rf ./dist/* ../blog-demo
          cd ../blog-demo
          pwd
          ls
          echo $GITHUB_TOKEN
      - name: push
        run: |
          cd ../blog-demo
          pwd
          ls
          git config --global user.email 854590394@qq.com
          git config --global user.name DarkLight-Long
          git remote -v
          git config --get user.name
          git config --get user.email
          time1=$(date)
          git add ./*
          git commit -m "$time1"
          git log
          git push
          


